@use './variables.scss' as *;

/* OPTIONS PAGE SPECIFIC STYLES */

// Options page body styling
.options-page {
  font-family: $font-family-base;
  margin: 0;
  padding: $spacing-lg;
  background-color: var(--color-background);
  color: var(--color-text);
  min-height: 100vh;
  display: flex;
  justify-content: stretch !important;
  align-items: flex-start !important;
}

// Main layout container
.options-layout {
  display: flex;
  width: 100% !important;
  max-width: none !important;
  height: 90vh;
  background-color: transparent;
  border-radius: $border-radius-lg;
  box-shadow: $shadow-lg;
  overflow: hidden;
  border: $border-width $border-style var(--color-border);
}

// Sidebar (left column)
.options-sidebar {
  flex: 0 0 280px;
  padding: $spacing-md;
  border-right: $border-width $border-style var(--color-border);
  display: flex;
  flex-direction: column;
  background-color: var(--sidebar-bg-color, var(--color-surface));
}

.sidebar-header {
  padding: $spacing-sm;
  text-align: center;
  margin-bottom: $spacing-md;
  
  h1 {
    font-size: $font-size-xl * 1.2;
    font-weight: $font-weight-medium;
    margin: 0 0 $spacing-xs 0;
    text-align: left;
    color: var(--color-text);
  }
  
  span {
    font-size: $font-size-xs;
    color: var(--color-text-secondary);
  }
  
  p {
    font-size: $font-size-sm;
    margin-top: $spacing-sm;
    color: var(--color-text-secondary);
  }
}

// Sidebar sections with card styling
.sidebar-section {
  border: $border-width $border-style var(--color-border);
  border-radius: $border-radius-md;
  padding: $spacing-md;
  margin-bottom: $spacing-md;
  
  h2 {
    font-size: $font-size-xs;
    font-weight: $font-weight-medium;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin: 0 0 $spacing-base 0;
    color: var(--color-text-secondary);
  }
}

.sidebar-footer {
  margin-top: auto;
  padding-top: $spacing-md;
  border-top: $border-width $border-style var(--color-border);
  font-size: $font-size-xs;
  color: var(--color-text-secondary);
  text-align: center;
  
  a {
    color: var(--color-primary);
    text-decoration: none;
    font-weight: $font-weight-medium;
    
    &:hover {
      text-decoration: underline;
    }
  }
}

// Main content area (right column)
.options-main {
  flex: 1;
  width: 920px !important;
  min-width: 920px !important;
  max-width: 920px !important;
  display: flex;
  overflow: hidden;
  background-color: var(--main-bg-color, var(--color-background));
}

// Vertical tabs (middle column)
.vertical-tabs {
  flex: 0 0 200px;
  border-right: $border-width $border-style var(--color-border);
  padding: $spacing-md 0;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
}

.tab-button {
  display: flex;
  align-items: center;
  width: 100%;
  padding: $spacing-base $spacing-lg;
  border: none;
  border-left: 4px solid transparent;
  background-color: transparent;
  cursor: pointer;
  font-size: $font-size-sm;
  font-weight: $font-weight-medium;
  color: var(--tab-button-color, var(--color-text-secondary));
  text-align: left;
  text-decoration: none;
  transition: all $transition-base;
  
  &:hover {
    background-color: var(--tab-button-hover-bg, #f1f3f4);
  }
  
  &.active {
    color: var(--tab-button-active-color, var(--color-primary));
    background-color: var(--tab-button-active-bg, #e8f0fe);
    border-left-color: var(--tab-button-active-border-color, var(--color-primary));
  }
}

// Tab content container (rightmost column)
.tab-content-container {
  flex: 1;
  width: 720px !important;
  min-width: 720px !important;
  max-width: 720px !important;
  padding: $spacing-xl;
  overflow-y: auto;
  position: relative;
}

// Tab content sections
.tab-content {
  opacity: 0;
  display: none;
  transition: opacity 300ms ease;
  
  &.active {
    display: block;
    opacity: 1;
  }
}

// Section styling
section {
  margin-bottom: $spacing-xxl;
  
  &:last-child {
    margin-bottom: 0;
  }
  
  > h2 {
    font-size: $font-size-xl;
    font-weight: $font-weight-medium;
    margin-top: 0;
    margin-bottom: $spacing-lg;
    padding-bottom: $spacing-base;
    border-bottom: $border-width $border-style var(--section-title-border, var(--color-border));
    color: var(--color-text);
  }
}

// Form styling
.setting-group {
  margin-bottom: $spacing-lg;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  padding-bottom: $spacing-base;
  border-bottom: $border-width $border-style var(--color-border);

  &:last-child {
    border-bottom: none;
    margin-bottom: 0;
  }
}

// Setting descriptions
.setting-description {
  font-size: $font-size-sm;
  color: var(--color-text-secondary);
  line-height: 1.5;
  margin-top: $spacing-xs;
  flex-basis: 100%;
  
  &.export-info {
    flex-basis: auto;
    padding-left: 0;
  }
  
  &.import-warning {
    flex-basis: auto;
    padding-left: 0;
    color: var(--color-warning);
  }
}

// Input field styling
input[type="text"],
input[type="password"],
select,
textarea {
  width: 100%;
  padding: $spacing-base;
  border: $border-width $border-style var(--input-border-color, var(--color-border));
  border-radius: $border-radius-base;
  font-size: $font-size-base;
  color: var(--input-text-color, var(--color-text));
  background-color: var(--input-bg-color, var(--color-background));
  box-sizing: border-box;
  transition: border-color $transition-base, box-shadow $transition-base;
  
  &:focus {
    outline: none;
    border-color: var(--input-focus-border-color, var(--color-primary));
    box-shadow: 0 0 0 2px var(--input-focus-shadow-color, rgba(25, 103, 210, 0.2));
  }
  
  &::placeholder {
    color: var(--color-text-disabled);
  }
}

// Button styling
button {
  padding: $spacing-base $spacing-lg;
  font-size: $font-size-base;
  font-weight: $font-weight-medium;
  cursor: pointer;
  border: none;
  border-radius: $border-radius-base;
  background-color: var(--button-bg-color, var(--color-primary));
  color: var(--button-text-color, white);
  transition: background-color $transition-base;
  
  &:hover {
    background-color: var(--button-hover-bg-color, var(--color-primary-dark));
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

// Inline button styling (like Reset button)
.button-inline {
  padding: $spacing-xs $spacing-sm;
  font-size: $font-size-xs;
  font-weight: $font-weight-semibold;
  border: $border-width $border-style var(--color-primary);
  background-color: transparent;
  color: var(--color-primary);
  border-radius: $border-radius-base;
  cursor: pointer;
  transition: all $transition-base;
  
  &:hover {
    background-color: var(--color-primary);
    color: white;
  }
}

// API key masking styles
.api-key-input {
  position: relative;
  font-family: monospace;
  letter-spacing: 0.1em;
  
  &:not(:hover):not(:focus) {
    color: transparent;
    text-shadow: 0 0 0 #666;
    background-image: repeating-linear-gradient(
      90deg,
      transparent,
      transparent 0.8ch,
      #666 0.8ch,
      #666 1ch
    );
    background-size: 1ch 1em;
    background-repeat: repeat;
    background-position: 0 center;
    
    &::placeholder {
      color: transparent;
    }
  }
  
  &:hover,
  &:focus {
    color: var(--input-text-color, var(--color-text));
    text-shadow: none;
    background-image: none;
    
    &::placeholder {
      color: var(--color-text-disabled);
    }
  }
}

// Import/Export specific styles
.export-controls-row,
.import-controls-row {
  display: flex;
  align-items: center;
  gap: $spacing-base;
  width: 100%;
  flex-wrap: wrap;
}

.export-password-input,
.import-password-input {
  flex: 1;
  min-width: 200px;
}

.export-button,
.import-button {
  padding: $spacing-base $spacing-lg;
  font-size: $font-size-base;
  font-weight: $font-weight-medium;
  cursor: pointer;
  border: none;
  border-radius: $border-radius-base;
  background-color: var(--button-bg-color, var(--color-primary));
  color: var(--button-text-color, white);
  transition: background-color $transition-base;
  white-space: nowrap;
  flex-shrink: 0;
  
  &:hover {
    background-color: var(--button-hover-bg-color, var(--color-primary-dark));
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

// Fieldset styling
fieldset {
  border: $border-width $border-style var(--color-border);
  border-radius: $border-radius-base;
  padding: $spacing-lg;
  margin-bottom: $spacing-lg;
  
  legend {
    font-size: $font-size-base;
    font-weight: $font-weight-semibold;
    color: var(--color-text);
    padding: 0 $spacing-sm;
  }
}

// Checkbox and radio styling improvements
input[type="checkbox"],
input[type="radio"] {
  width: auto;
  margin-right: $spacing-sm;
}

// GitHub icon styling
.github-icon {
  width: 22px;
  height: 22px;
  filter: var(--github-icon-filter, none);
  transition: filter $transition-base;
}

// Responsive design
@media (max-width: #{$breakpoint-lg}) {
  .options-layout {
    height: auto;
    min-height: 90vh;
    flex-direction: column;
  }
  
  .options-sidebar {
    flex: none;
    border-right: none;
    border-bottom: $border-width $border-style var(--color-border);
  }
  
  .vertical-tabs {
    flex: none;
    border-right: none;
    border-bottom: $border-width $border-style var(--color-border);
    flex-direction: row;
    overflow-x: auto;
    padding: $spacing-sm 0;
    
    .tab-button {
      border-left: none;
      border-bottom: 4px solid transparent;
      white-space: nowrap;
      min-width: 120px;
      
      &.active {
        border-left: none;
        border-bottom-color: var(--tab-button-active-border-color, var(--color-primary));
      }
    }
  }
  
  .tab-content-container {
    padding: $spacing-md;
  }
}

@media (max-width: #{$breakpoint-md}) {
  .options-page {
    padding: $spacing-sm;
  }
  
  .setting-group {
    flex-direction: column;
    align-items: stretch;
    gap: $spacing-sm;
    
    label {
      min-width: auto;
    }
  }
  
  .export-controls-row,
  .import-controls-row {
    flex-direction: column;
    align-items: stretch;
    
    .export-password-input,
    .import-password-input {
      min-width: auto;
      width: 100%;
    }
    
    .export-button,
    .import-button {
      width: 100%;
    }
  }
  
  .sidebar-header h1 {
    text-align: center;
  }
}

// Status message styling
.status-message {
  padding: $spacing-base $spacing-md;
  border-radius: $border-radius-base;
  margin-top: $spacing-lg;
  font-size: $font-size-sm;
  font-weight: $font-weight-medium;
  
  &.status-success {
    background-color: var(--color-success);
    color: white;
  }
  
  &.status-error {
    background-color: var(--color-error);
    color: white;
  }
  
  &.status-warning {
    background-color: var(--color-warning);
    color: white;
  }
}

// Validation error styling
.validation-error {
  padding: $spacing-sm $spacing-base;
  background-color: var(--color-error);
  color: white;
  border-radius: $border-radius-base;
  font-size: $font-size-sm;
  font-weight: $font-weight-medium;
  margin-top: $spacing-sm;
  margin-bottom: $spacing-base;
  border-left: 4px solid #d32f2f;
  
  &:empty {
    display: none;
  }
}

// Input error state
.input-error {
  border-color: var(--color-error) !important;
  box-shadow: 0 0 0 2px rgba(244, 67, 54, 0.2) !important;
  
  &:focus {
    border-color: var(--color-error) !important;
    box-shadow: 0 0 0 2px rgba(244, 67, 54, 0.3) !important;
  }
}

// Accordion styling (for Help tab)
.accordion {
  .accordion-item {
    border: $border-width $border-style var(--color-border);
    border-radius: $border-radius-base;
    margin-bottom: $spacing-base;
    overflow: hidden;
    
    &:last-child {
      margin-bottom: 0;
    }
  }
  
  .accordion-header {
    width: 100%;
    padding: $spacing-md $spacing-lg;
    background-color: var(--color-surface);
    border: none;
    text-align: left;
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: $font-size-base;
    font-weight: $font-weight-medium;
    color: var(--color-text);
    transition: background-color $transition-base;
    
    &:hover {
      background-color: var(--tab-button-hover-bg, #f1f3f4);
    }
    
    &.active {
      background-color: var(--tab-button-active-bg, #e8f0fe);
      color: var(--tab-button-active-color, var(--color-primary));
    }
    
    .accordion-icon {
      font-size: $font-size-lg;
      font-weight: $font-weight-bold;
      margin-left: $spacing-sm;
      transition: transform $transition-base;
      min-width: 20px;
      text-align: center;
    }
  }
  
  .accordion-content {
    max-height: 0;
    overflow: hidden;
    transition: max-height $transition-slow ease-out;
    background-color: var(--color-background);
    
    &.open {
      max-height: 1000px;
      transition: max-height $transition-slow ease-in;
    }
    
    .accordion-inner {
      padding: $spacing-lg;
    }
  }
}