@use '../base/variables' as *;
@use '../base/mixins' as *;

// TranslationWindow component styles - for Shadow DOM injection
// Increased specificity approach to avoid !important declarations

// CSS Custom Properties for component-specific overrides
:root {
  // Window-specific properties
  --ti-window-border-radius: #{$border-radius-lg};
  --ti-window-opacity-hidden: 0;
  --ti-window-opacity-visible: 0.9;
  --ti-window-transform-hidden: scale(0.95);
  --ti-window-transform-visible: scale(1);
  --ti-window-visibility-hidden: hidden;
  --ti-window-visibility-visible: visible;
  --ti-window-transition: opacity 0.4s cubic-bezier(0.25, 0.8, 0.25, 1),
                            transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1),
                            visibility 0.4s cubic-bezier(0.25, 0.8, 0.25, 1),
                            width 0.4s cubic-bezier(0.25, 0.8, 0.25, 1),
                            height 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);

  // Loading window properties
  --ti-loading-width: 60px;
  --ti-loading-height: 40px;
  --ti-loading-bg-light: #ffffff;
  --ti-loading-bg-dark: #333333;
  --ti-loading-border-light: rgba(0, 0, 0, 0.1);
  --ti-loading-border-dark: rgba(255, 255, 255, 0.2);

  // Normal window properties
  --ti-normal-window-width: #{$selection-window-max-width};
  --ti-normal-window-min-height: 100px;

  // Action button properties
  --ti-action-btn-size: 28px;
  --ti-action-btn-border-radius: #{$border-radius-md};

  // Window body properties
  --ti-window-body-margin: 5px;
}

// Base window styles with maximum specificity
.ti-window {
  border-radius: var(--ti-window-border-radius);
  @include shadow-lg;
  display: flex;
  flex-direction: column;
  font-family: $font-family-base;
  opacity: var(--ti-window-opacity-hidden);
  transform: var(--ti-window-transform-hidden);
  transition: var(--ti-window-transition);
  visibility: var(--ti-window-visibility-hidden);

  // Disable transitions when dragging
  &.is-dragging {
    transition: none;
  }

  // Loading window specific styles
  &.ti-loading-window {
    width: var(--ti-loading-width);
    height: var(--ti-loading-height);
    min-width: var(--ti-loading-width);
    min-height: var(--ti-loading-height);
    max-width: var(--ti-loading-width);
    max-height: var(--ti-loading-height);
    border-radius: 20px;
    padding: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    background: var(--ti-loading-bg-light);
    border: $border-width $border-style var(--ti-loading-border-light);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
    position: fixed;

    // Loading window visibility override
    &.visible {
      opacity: var(--ti-window-opacity-visible);
      transform: var(--ti-window-transform-visible);
      visibility: var(--ti-window-visibility-visible);
    }

    // Dark theme for loading window
    &.dark {
      background: var(--ti-loading-bg-dark);
      border-color: var(--ti-loading-border-dark);

      &.visible {
        opacity: var(--ti-window-opacity-visible);
        transform: var(--ti-window-transform-visible);
        visibility: var(--ti-window-visibility-visible);
      }
    }
  }

  // Normal window - full size
  &.normal-window {
    width: var(--ti-normal-window-width);
    min-height: var(--ti-normal-window-min-height);
  }

  &.visible {
    opacity: var(--ti-window-opacity-visible);
    transform: var(--ti-window-transform-visible);
    visibility: var(--ti-window-visibility-visible);
  }

  // Light theme with increased specificity
  &.light {
    background-color: var(--bg-color, #ffffff);
    border: $border-width $border-style var(--border-color, #e8e8e8);
    color: var(--text-color, #2c3e50);

    // Light theme header with maximum specificity
    .window-header {
      background-color: var(--header-bg-color, #f7f7f7);
      border-bottom: $border-width $border-style var(--header-border-color, #e8e8e8);
    }

    // Light theme action buttons with maximum specificity
    .action-btn {
      background-color: var(--toolbar-link-hover-bg-color, #f0f0f0);
      color: var(--text-color, #555);

      &:hover {
        background-color: var(--bg-color, #e5e5e5);
      }
    }
  }

  // Dark theme with increased specificity
  &.dark {
    background-color: var(--bg-color, #2d2d2d);
    border: $border-width $border-style var(--border-color, #424242);
    color: var(--text-color, #e0e0e0);

    // Dark theme header with maximum specificity
    .window-header {
      background-color: var(--header-bg-color, #333333);
      border-bottom: $border-width $border-style var(--header-border-color, #424242);
    }

    // Dark theme action buttons with maximum specificity
    .action-btn {
      background-color: var(--toolbar-link-hover-bg-color, #424242);
      color: var(--text-color, #e0e0e0);

      &:hover {
        background-color: var(--border-color, #555555);
      }
    }
  }
}

// Component-specific styles with maximum specificity
// Window header with increased specificity
.ti-window .window-header,
.window-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: $spacing-sm $spacing-base;
  cursor: move;
  user-select: none;
}

// Header actions with increased specificity
.ti-window .header-actions,
.header-actions {
  display: flex;
  align-items: center;
  gap: $spacing-sm;
}

// Action button with increased specificity
.ti-window .action-btn,
.action-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  width: var(--ti-action-btn-size);
  height: var(--ti-action-btn-size);
  border: none;
  border-radius: var(--ti-action-btn-border-radius);
  cursor: pointer;
  @include transition-fast(background-color);
}

// Window body with increased specificity
.ti-window .window-body,
.window-body {
  padding: $spacing-md;
  min-height: var(--ti-normal-window-min-height);
  display: flex;
  flex-direction: column;
  margin-right: var(--ti-window-body-margin);
  margin-left: var(--ti-window-body-margin);
}

// Additional specificity for theme-specific components
.ti-window.light .window-header,
.ti-window.dark .window-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: $spacing-sm $spacing-base;
  cursor: move;
  user-select: none;
}

.ti-window.light .header-actions,
.ti-window.dark .header-actions {
  display: flex;
  align-items: center;
  gap: $spacing-sm;
}

.ti-window.light .action-btn,
.ti-window.dark .action-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  width: var(--ti-action-btn-size);
  height: var(--ti-action-btn-size);
  border: none;
  border-radius: var(--ti-action-btn-border-radius);
  cursor: pointer;
  @include transition-fast(background-color);
}

.ti-window.light .window-body,
.ti-window.dark .window-body {
  padding: $spacing-md;
  min-height: var(--ti-normal-window-min-height);
  display: flex;
  flex-direction: column;
  margin-right: var(--ti-window-body-margin);
  margin-left: var(--ti-window-body-margin);
}