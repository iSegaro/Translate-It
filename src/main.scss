// Main SCSS entry point for the Vue.js browser extension
// Using modern @use syntax for better organization and performance

// Base styles - Foundation
@use "./assets/styles/base/reset";
@use "./assets/styles/base/variables"; 
@use "./assets/styles/base/mixins";

// Layout styles - Page and context layouts
@use "./assets/styles/layout/options";
@use "./assets/styles/layout/sidepanel"; 
@use "./assets/styles/layout/content";

// Component styles - Reusable components
@use "./assets/styles/components/popup";
@use "./assets/styles/components/translation-window";
@use "./assets/styles/components/text-field-icon";

// Utility styles - Helpers and utilities
@use "./assets/styles/utilities/utilities";
@use "./assets/styles/utilities/helpers";

// Context-specific styles - these should be overridden by specific entry points

/* Popup context (400px width) - only applied in popup.js */
body.popup-context {
  width: 400px !important;
  max-height: 600px !important;
  overflow: hidden !important;
}

/* Options context - only applied in options.js */
body.options-context {
  min-height: 100vh !important;
  overflow: hidden !important;
  display: flex !important;
  justify-content: center !important;
  align-items: center !important;
  padding: 0 !important; /* No padding on body */
  margin: 0; /* Ensure no default margin */
}

body.options-context #app {
  /* The layout is now handled by the body flex container and the OptionsLayout component. */
  /* Previous styles were causing conflicts and have been removed. */
}

/* Sidepanel context (full viewport) - only applied in sidepanel.js */
body.sidepanel-context {
  width: 100% !important;
  height: 100vh !important;
  overflow: hidden !important;
}

body.sidepanel-context #app {
  width: 100% !important;
  height: 100% !important;
}

// Extension-specific element selection styles
.translate-it-select-highlight {
  outline: 2px solid #4a90e2 !important;
  outline-offset: 2px !important;
  background-color: rgba(74, 144, 226, 0.1) !important;
}

.translate-it-select-overlay {
  animation: translateItSelectPulse 2s infinite;
}

@keyframes translateItSelectPulse {
  0%, 100% {
    background-color: rgba(74, 144, 226, 0.3);
    border-color: #4a90e2;
  }
  50% {
    background-color: rgba(74, 144, 226, 0.5);
    border-color: #2171b5;
  }
}

.translate-it-cursor-select {
  cursor: crosshair !important;
}