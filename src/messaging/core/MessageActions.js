/**
 * Message action definitions for standardized communication
 */
export class MessageActions {
  // Core actions
  static PING = 'ping';
  static GET_INFO = 'getInfo';
  static HANDLE_ERROR = 'handleError';
  
  // Translation actions
  static TRANSLATE = 'TRANSLATE';
  static TRANSLATE_SELECTION = 'TRANSLATE_SELECTION';
  static TRANSLATE_PAGE = 'TRANSLATE_PAGE';
  static FETCH_TRANSLATION = 'fetchTranslation';
  static BATCH_TRANSLATE = 'BATCH_TRANSLATE';
  static GET_PROVIDERS = 'GET_PROVIDERS';
  static TEST_PROVIDER = 'TEST_PROVIDER';
  static TRANSLATION_RESULT_UPDATE = 'TRANSLATION_RESULT_UPDATE';
  static TRANSLATE_TEXT = 'TRANSLATE_TEXT';
  static TRANSLATE_IMAGE = 'TRANSLATE_IMAGE';
  static CANCEL_TRANSLATION = 'CANCEL_TRANSLATION';

  // Select Element
  static GET_SELECT_ELEMENT_STATE = 'getSelectElementState';
  static SET_SELECT_ELEMENT_STATE = 'setSelectElementState';
  static SELECT_ELEMENT_STATE_CHANGED = 'selectElementStateChanged';
  static PROCESS_SELECTED_ELEMENT = 'PROCESS_SELECTED_ELEMENT';
  
  // Floating Window
  static TRANSLATION_COMPLETE = 'translationComplete';
  
  // Sidepanl
  static OPEN_SIDE_PANEL = 'openSidePanel';
  static SELECTED_TEXT_FOR_SIDEPANEL = 'selectedTextForSidePanel';

  // History actions
  static GET_HISTORY = 'GET_HISTORY';
  static CLEAR_HISTORY = 'CLEAR_HISTORY';
  static ADD_TO_HISTORY = 'ADD_TO_HISTORY';
  
  // Popup
  static Set_Exclude_Current_Page = 'setExcludeCurrentPage';
  static IS_Current_Page_Excluded = 'isCurrentPageExcluded';
  
  // TTS actions
  static GOOGLE_TTS_SPEAK = 'GOOGLE_TTS_SPEAK';
  static PLAY_OFFSCREEN_AUDIO = 'playOffscreenAudio';
  
  // Capture actions
  static SCREEN_CAPTURE = 'SCREEN_CAPTURE';
  static START_SCREEN_CAPTURE = 'START_SCREEN_CAPTURE';
  static CAPTURE_FULL_SCREEN = 'CAPTURE_FULL_SCREEN';
  static START_CAPTURE_SELECTION = 'START_CAPTURE_SELECTION';
  static PROCESS_IMAGE_OCR = 'PROCESS_IMAGE_OCR';
  static CAPTURE_TRANSLATE_IMAGE_DIRECT = 'CAPTURE_TRANSLATE_IMAGE_DIRECT';
  static CAPTURE_TRANSLATION_COMPLETED = 'CAPTURE_TRANSLATION_COMPLETED';
  static CAPTURE_SAVE_TRANSLATION = 'CAPTURE_SAVE_TRANSLATION';
  static SCREEN_CAPTURE_CANCELLED = 'SCREEN_CAPTURE_CANCELLED';
  static PROCESS_SCREEN_CAPTURE = 'PROCESS_SCREEN_CAPTURE';
  static START_AREA_CAPTURE = 'START_AREA_CAPTURE';
  static OCR_PROCESS = 'OCR_PROCESS';
  static START_SCREEN_AREA_SELECTION = 'START_SCREEN_AREA_SELECTION';
  static SHOW_CAPTURE_PREVIEW = 'SHOW_CAPTURE_PREVIEW';
  static SHOW_CAPTURE_RESULT = 'SHOW_CAPTURE_RESULT';
  
  // Selection actions
  static ACTIVATE_SELECT_ELEMENT_MODE = 'activateSelectElementMode';
  static DEACTIVATE_SELECT_ELEMENT_MODE = 'deactivateSelectElementMode';
  static REVERT_SELECT_ELEMENT_MODE = 'revertTranslation';
  static GET_SELECTED_TEXT = 'GET_SELECTED_TEXT';
  
  // Notification actions
  static SHOW_NOTIFICATION = 'SHOW_NOTIFICATION';
  static DISMISS_NOTIFICATION = 'DISMISS_NOTIFICATION';
  static SHOW_ERROR_NOTIFICATION = 'SHOW_ERROR_NOTIFICATION';
  static SHOW_NOTIFICATION_SIMPLE = 'showNotification';
  
  // Context Menu actions
  static REFRESH_CONTEXT_MENUS = 'REFRESH_CONTEXT_MENUS';
  static CONTEXT_MENU_TRANSLATE_ELEMENT = 'CONTEXT_MENU_TRANSLATE_ELEMENT';
  static CONTEXT_MENU_TRANSLATE_TEXT = 'CONTEXT_MENU_TRANSLATE_TEXT';
  
  // Storage actions
  static GET_SETTINGS = 'GET_SETTINGS';
  static SET_SETTINGS = 'SET_SETTINGS';
  static SYNC_SETTINGS = 'SYNC_SETTINGS';
  
  // Provider actions
  static TEST_PROVIDER_CONNECTION = 'TEST_PROVIDER_CONNECTION';
  static GET_PROVIDER_CONFIG = 'GET_PROVIDER_CONFIG';
  static UPDATE_PROVIDER_CONFIG = 'UPDATE_PROVIDER_CONFIG';
  static GET_PROVIDER_STATUS = 'GET_PROVIDER_STATUS';
  static SET_ACTIVE_PROVIDER = 'SET_ACTIVE_PROVIDER';
  static GET_PROVIDER_CAPABILITIES = 'GET_PROVIDER_CAPABILITIES';
  static VALIDATE_API_KEY = 'VALIDATE_API_KEY';
  
  // Service actions
  static GET_SERVICE_STATUS = 'GET_SERVICE_STATUS';
  static INITIALIZE_SERVICE = 'INITIALIZE_SERVICE';
  static RESTART_SERVICE = 'RESTART_SERVICE';
  static GET_SERVICE_CONFIG = 'GET_SERVICE_CONFIG';
  static UPDATE_SERVICE_CONFIG = 'UPDATE_SERVICE_CONFIG';
  static GET_SERVICE_METRICS = 'GET_SERVICE_METRICS';
  static CLEAR_SERVICE_CACHE = 'CLEAR_SERVICE_CACHE';
  static GET_TRANSLATION_HISTORY = 'GET_TRANSLATION_HISTORY';
  static CLEAR_TRANSLATION_HISTORY = 'CLEAR_TRANSLATION_HISTORY';
  static EXPORT_SERVICE_DATA = 'EXPORT_SERVICE_DATA';
  static IMPORT_SERVICE_DATA = 'IMPORT_SERVICE_DATA';
  
  // Background actions
  static WARMUP_BACKGROUND_SERVICES = 'WARMUP_BACKGROUND_SERVICES';
  static GET_BACKGROUND_STATUS = 'GET_BACKGROUND_STATUS';
  static RESTART_BACKGROUND = 'RESTART_BACKGROUND';
  static GET_BACKGROUND_METRICS = 'GET_BACKGROUND_METRICS';
  static CLEAR_BACKGROUND_CACHE = 'CLEAR_BACKGROUND_CACHE';
  static SCHEDULE_BACKGROUND_TASK = 'SCHEDULE_BACKGROUND_TASK';
  static CANCEL_BACKGROUND_TASK = 'CANCEL_BACKGROUND_TASK';
  static GET_BACKGROUND_LOGS = 'GET_BACKGROUND_LOGS';
  static SET_BACKGROUND_CONFIG = 'SET_BACKGROUND_CONFIG';
  static GET_MEMORY_STATS = 'GET_MEMORY_STATS';
  static FORCE_GARBAGE_COLLECTION = 'FORCE_GARBAGE_COLLECTION';

  /**
   * Get all available actions
   * @returns {Array<string>} Array of action names
   */
  static getAllActions() {
    return Object.values(this);
  }

  /**
   * Validate action name
   * @param {string} action - Action to validate
   * @returns {boolean} True if action is valid
   */
  static isValidAction(action) {
    return this.getAllActions().includes(action);
  }
}
